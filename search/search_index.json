{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the IBM Cloud Satellite sales enablement demonstration. There are 4 parts to this demonstration as seen in the left hand navigation: Part 1 - IBM Cloud Satellite overview Part 2 - Deploy an IBM Cloud Satellite enabled service Part 3 - Deploy an OpenShift application Part 4 - Preparing for a client demonstration Each of these sections has detailed steps for demonstrating IBM Cloud Satellite. Click on each section name in the left hand navigation bar to expand the section. In Part 1 and Part 2, you will see how the demonstration environment was built and how you can perform a \"baking show\" type of demonstration using the IBM Cloud Portal or videos made available in this demonstration script. You will not actually be deploying a new Satellite Location or Red Hat OpenShift on IBM Cloud cluster, as these activities take a significant amount of time and money. In Part 1, you will also learn how to use the IBM Cloud Shell and IBM Cloud Satellite command line interfaces (CLI). It is important to complete the CLI steps as the activities you will perform in Part 3 are dependent on them. In Part 3, you will use the IBM Cloud Portal to deploy a cloud native application. This section provides a compelling demonstration to potential clients. Finally in Part 4, learn how to prepare for a client demonstration as well as the Stand and Deliver that is required to complete the IBM Cloud Satellite Level 3 learning plan. Important It is important to complete each part of the demonstration to gain a full understanding of how to best demonstrate IBM Cloud Satellite. Some later sections To complete your IBM Cloud Satellite Sales Level 3 training, you must complete each of the sections. When done, return to the Your Learning plan ( https://yourlearning.ibm.com/activity/PLAN-7D757C8B58E7 ), and mark this activity complete. Note Note, you can access this demonstration environment at any time via IBM Tech Zone https://techzone.ibm.com/collection/se-l3-ibm-cloud-satellite . Once you are comfortable with the environment, it can quickly and easily be leveraged for customer demonstrations. In most cases, depending on your audience, the Deploy an OpenShift application section will be most appropriate for customer demonstrations. You can also leverage the IBM Cloud Satellite collection here for longer client demonstrations or proof-of-concepts. Be aware, additional provisioning time and manual configurations are required. Refer to the documentation in the collection. Helpful tips for using this demonstration environment This demonstration script is organized in parts and chapters. Most chapters contain numbered steps, which are typically actions that you will perform. Throughout the lab, you will see images that are examples of what you should be seeing during the step. In some instances, you will see the following styles of highlighting in those images: Action highlight box: Illustrates where you should click, enter, or select an item: Path/explore highlight box: Illustrates one of two things: the path to follow to get to a specific location in the user interface areas to explore on your own Copy to clipboard box: Text that is copied to your clipboard. Click the copy icon (highlighted below) and then paste using your operating systems paste function, for example, entering Ctrl +v , Cmd +v , or right click and select paste.","title":"Home"},{"location":"deploy-application/01.01%20Introduction/","text":"IBM Cloud Satellite provides the ability to deploy Kubernetes resources to Red Hat OpenShift on IBM Cloud clusters that run in IBM Cloud, IBM Cloud Satellite Locations, and on-premises. This capability is called Satellite Config. You can learn more about Satellite Config here . Satellite Config is a continuous delivery tool based on the Razee open source project. You can learn more about Razee here . There are 4 key concepts you should be familiar with. They are: Cluster groups A cluster group specifies a set of Red Hat OpenShift on IBM Cloud clusters that are registered with the Satellite Config component and that are included in a Satellite configuration. Red Hat OpenShift on IBM Cloud clusters that run in your location are automatically registered and can be added to a cluster group. Clusters that run in IBM Cloud must be manually registered with the Satellite Config component before you can add them to a cluster group. Configuration A Satellite configuration lets you upload or create Kubernetes resource YAML file versions that you want to deploy to a group of Red Hat OpenShift on IBM Cloud clusters. The version that you upload is not applied to your cluster until you add a subscription to your configuration. Version A version represents a Kubernetes resource YAML file that you uploaded or manually created for a Satellite configuration. You can include any Kubernetes resource in your version and upload as many versions to a configuration as you like. For help developing a Kubernetes YAML file, see Developing apps to run on OpenShift. To create a version, see Creating Satellite configurations. Subscription A Satellite subscription is created for a Satellite configuration and specifies which version of the Kubernetes resource that you uploaded is deployed to one or more cluster groups. The Red Hat OpenShift on IBM Cloud clusters in your cluster group can exist in your Satellite or in IBM Cloud. Up until now, the demonstrations you have gone through have been focused on creating satellite locations and deploying Red Hat OpenShift on IBM Cloud to a Satellite Location. While these are good demonstrations, they do not highlight key business values of IBM Cloud Satellite. In this demonstration, you will learn to demonstrate one of the strong values of IBM Cloud Satellite... the ability to easily deploy and update applications across IBM Cloud Satellite Locations. Info The images in this demonstration guide may differ from what you see when performing the steps. This will typically be due to changes in the IBM Cloud portal user interface, additional objects in lists, etc. These differences should not affect the demonstration. The following acronyms are used throughout this demonstration guide: - YAML - Yet Another Markup Language - AWS - Amazon Web Services","title":"Introduction and terminology"},{"location":"deploy-application/01.02%20The%20Food%20Delivery%20Application/","text":"For this demonstration, we will leverage a sample Food Delivery application. Food Delivery is a cloud native, microservices-based application leveraging multiple cloud native open source projects to develop a simulated version of an UberEATS/Grub Hub type business. The application uses Kafka, Redis, and MongoDB. In this IBM Cloud Satellite demonstration, you will create development and production deployments for the Food Delivery application as illustrated in the diagram below. The application runs on Red Hat OpenShift on IBM Cloud (a fully managed service). The Satellite Location in AWS will act as the development environment for the application, while production will be in the IBM Cloud data center in Washington, D.C. Important The production environment is not in a Satellite Location. This illustrates the ability of IBM Cloud Satellite to manage applications not only in Satellite Locations, but also other non-Satellite locations simply by registering the OpenShift cluster with IBM Cloud Satellite. Registering a cluster in this manner is achieved by granting the cluster administrator role to the to the IBM Cloud Satellite Config service. This step has already been performed, but you can learn more about it here . History and Reference This set of assets is based on the material used at the Digital Developer Conference: Hybrid Cloud Labs and the IBM Cloud Community Days Conference. You can reference details on the workshops here: https://anthonyamanse.gitbook.io/ibm-satellite-workshop/. The base application itself was developed by Yan Koyfam and Anthony Amaranse and published here: https://github.com/IBM/scaling-apps-with-kafka . It was later modified to remove the dependance on Confluent, another open source project. Other contributors include Dave Tropeano and Julie Nash.","title":"The Food Delivery Application"},{"location":"deploy-application/01.02%20The%20Food%20Delivery%20Application/#history-and-reference","text":"This set of assets is based on the material used at the Digital Developer Conference: Hybrid Cloud Labs and the IBM Cloud Community Days Conference. You can reference details on the workshops here: https://anthonyamanse.gitbook.io/ibm-satellite-workshop/. The base application itself was developed by Yan Koyfam and Anthony Amaranse and published here: https://github.com/IBM/scaling-apps-with-kafka . It was later modified to remove the dependance on Confluent, another open source project. Other contributors include Dave Tropeano and Julie Nash.","title":"History and Reference"},{"location":"deploy-application/01.03%20Demonstration%20flow/","text":"During this demonstration, you will perform the following tasks. View the cluster groups for development and production environments Open your Satellite configuration for the Food Delivery application Create versions to: Deploy Kafka, Mongo, and Redis backends Deploy backend microservices Deploy 2 versions of the application front end Create subscriptions for the cluster groups and versions Verify deployment of the application components Change the application frontend to a new version for development environment Change the application frontend to a new version for production environment Rollback the production environment to the original application front end Remember, the IBM Cloud Satellite Location in AWS has already been provisioned. In addition, two Red Hat OpenShift on IBM Cloud clusters have been provisioned: one in the Satellite Location and one in another IBM Cloud datacenter. Important Both an IBM Cloud Satellite configuration and an OpenShift project (also known as a namespace) have been created for you. The name for each of these is based upon your IBMid. Your IBMid is not the same as your IBM login. If you do not know your IBMid, you can find it in the IBM Cloud portal by navigating to: https://cloud.ibm.com/iam/users , and then selecting your IBM Cloud user identity. You will see your IBMid in the URL for the page that is loaded or by clicking on the Details link at the right of your user page. The format of the IBMid will be similar to: \"IBMid-#######ABC\". The configuration and namespace will be based upon the last part of your IBMid with -ns appended (i.e. #######abc-ns in all lower case to conform to namespace naming rules). In this documentation, we will use #######abc-ns to refer to the configuration and namespace , but you will need to make sure you select the configuration and namespace based upon your IBMid value. Tip How you orchestrate a demonstration for a client will depend on how much time you have for the demonstration, the audience, and your comfort level with the underlying technologies. For instance, if you have a very limited amount to time, you may create the versions before you start the demonstration to save time. If you have a more technical audience, you may want to describe the content of the YAML files that are used. As you walk through the steps in the next section, consider how you would customize the demonstration based upon time, audience, etc.","title":"Demonstration flow"},{"location":"deploy-application/01.04%20Watch%20the%20demonstration/","text":"Below is a 12-minute video that covers this demonstration. The video is based on the steps described in the subsequent sections of this demonstration guide. Callouts and some animations have been included. The screen splitting techniques are recommended, especially if you are doing your demonstration via a web conference. If you have multiple monitors, try putting the demonstration guide browser window on one monitor, and the IBM Cloud portal browser pages on another. During the web conference, just share the monitor with the IBM Cloud portal.","title":"01.04 Watch the demonstration"},{"location":"deploy-application/02.01%20Create%20cluster%20groups/","text":"The cluster group specifies all Red Hat OpenShift on IBM Cloud clusters that you want to include in the deployment of your Kubernetes resources. You can learn more about creating cluster groups here . For this demonstration, the two cluster groups have already been created for you. This was a simple 2 step process of creating a Cluster Group name and adding one or more Red Hat OpenShift Clusters to the Cluster group. In the steps below, verify the cluster groups have been created and each is assigned a cluster. Open the IBM Cloud portal to the Satellite-Clusters page: https://cloud.ibm.com/satellite/clusters If you haven't already, change from your IBM Cloud account to the 2435442 - ITZ - Satellite account. Tip If your browser window is narrow, you may see this icon: instead of the current account name as shown in the screen capture above. Click the Cluster groups tab. Verify the food-delivery-development-clusters and food-delivery-production-clusters groups exist and each has 1 cluster assigned.","title":"View cluster groups"},{"location":"deploy-application/03.01%20Create%20a%20configuration/","text":"Configurations allow you to upload or create Kubernetes resource YAML file versions that you want to deploy to one or more Red Hat OpenShift clusters. Once you create versions , the Kubernetes resources can be deployed by adding a subscription to your configuration . The subscription specifies the version to be deployed and the target cluster group(s) . Find the unique identifier for your demonstration environment. Important In this demonstration environment, an IBM Cloud Satellite configuration and Red Hat OpenShift project (also known as a namespace) have already been created for you using a unique identifier based upon your IBM identification (IBMid). You will need this value throughout this demonstration. We will refer to this value as Demo-UUID throughout this guide. This unique identifier can be found in the IBM Technology Zone reservation email with the subject \"Your environment is ready\" or in your reservation details on the IBM Technology Zone web site. If you have the e-mail, look for the Namespace bullet. Your unique identifier is the value similar to #######abc-ns . If you do not have the e-mail, follow the steps below to find your unique identifier. a. Open the details card for the IBM Cloud Satellite - Sales Enablment L3 IBM Technology Zone reservation: https://techzone.ibm.com/my/reservations . b. Find and record the Namespace value in the Environment section of the details page. This is your Demo-UUID and will have a format similar to #######abc-ns . If you closed the IBM Cloud portal after the previous step, open the IBM Cloud portal to the Satellite Clusters page: https://cloud.ibm.com/satellite/configuration Find the configuration with the name of your Demo-UUID .","title":"View configuration"},{"location":"deploy-application/03.02%20Create%20versions/","text":"Now that the Configuration has been created, the next step is to create versions for each part of the Food Delivery application. In this example, the YAML files used will create OpenShift deployments and routes in the namespace that has been created for you in the respective OpenShift clusters. Four deployment versions will be created: two for the backend services of the application and two different frontends. These deployments will deploy the Kubernetes containers that include the container images and application code. Versions will also be created for the development (dev) and production (prod) environments that will define routes . Routes are used in OpenShift to define communication paths between the end user and the frontend of the application, as well as from the frontend to the backend, and backend to the various backend datastores. Tip Don't be intimidated by the length this section. Most of it is code that you will cut and paste into the IBM Cloud portal. If you closed the IBM Cloud portal after the previous step, open the IBM Cloud portal to the Satellite Configurations page: https://cloud.ibm.com/satellite/configuration . Click the configuration based on your Demo-UUID . Click the Versions link in left hand menu. Warning Notice, one Version already exists in your configuration. This Version was used to create the OpenShift project where you will be deploying the application. Do NOT delete any existing versions or subscriptions! Deleting them will break your demonstration environment. Click Add version + . Create a version called kafka-mongo-redis . Important Do NOT click the Add button until AFTER you complete step 6!!! For the Version name, use: kafka-mongo-redis Tip To save time, use click the icon in the sections below to copy the text to your clipboard and then paste the text into the IBM Cloud portal as directed. Optionally, enter a description in the Description field. Copy and paste the following YAML code into the YAML editor . kafka-mongo-redis.yaml # single replica - no persistence --- apiVersion : apps/v1 kind : Deployment metadata : name : mongo namespace : Demo-UUID spec : selector : matchLabels : name : mongo replicas : 1 template : metadata : labels : name : mongo version : v1 spec : containers : - image : mongo name : mongo ports : - containerPort : 27017 volumeMounts : - mountPath : /data/db name : data volumes : - name : data emptyDir : {} --- apiVersion : v1 kind : Service metadata : name : mongo namespace : Demo-UUID spec : ports : - port : 27017 targetPort : 27017 selector : name : mongo # no persistence --- apiVersion : apps/v1 kind : Deployment metadata : name : redis namespace : Demo-UUID spec : selector : matchLabels : name : redis replicas : 1 template : metadata : labels : name : redis version : v1 spec : containers : - image : redis name : redis ports : - containerPort : 6379 volumeMounts : - mountPath : /data name : data volumes : - name : data emptyDir : {} --- apiVersion : v1 kind : Service metadata : name : redis namespace : Demo-UUID spec : ports : - port : 6379 targetPort : 6379 selector : name : redis --- apiVersion : v1 kind : Service metadata : name : kafka namespace : Demo-UUID spec : ports : - port : 9092 protocol : TCP targetPort : 9092 selector : name : kafka --- apiVersion : apps/v1 kind : Deployment metadata : name : kafka namespace : Demo-UUID spec : selector : matchLabels : name : kafka template : metadata : labels : name : kafka spec : containers : - image : bitnami/zookeeper:3.6.3 name : zookeeper env : - name : ALLOW_ANONYMOUS_LOGIN value : 'yes' ports : - containerPort : 2181 name : zookeeper - image : bitnami/kafka:2.8.0 name : kafka env : - name : KAFKA_BROKER_ID value : '1' - name : KAFKA_CFG_LISTENERS value : 'PLAINTEXT://:9092' - name : KAFKA_CFG_ADVERTISED_LISTENERS value : 'PLAINTEXT://kafka:9092' - name : KAFKA_CFG_ZOOKEEPER_CONNECT value : 'localhost:2181' - name : ALLOW_PLAINTEXT_LISTENER value : 'yes' ports : - containerPort : 9092 name : kafka Search and replace all instances of Demo-UUID with your unique Demo-UUID . The YAML editor in the IBM Cloud portal has a search and replace function. Type Ctrl +f or Cmd +f (this will vary depending on your computers operating system). Expand the dialog by clicking the icon next to the entry field. In the first entry field, enter Demo-UUID . In the second entry field, enter your unique Demo-UUID . The dialog should update with a \"1 of 6\" message. Click the replace all icon to make the changes. Click Add . Is the Add button not enabled? If the Add button isn't enabled, there is a problem with your YAML. YAML is very sensitive to formatting. Make sure you cut & paste the YAML instead of entering it manually. Repeat the process and create a version called food-delivery-backend . For the Version name, use: food-delivery-backend Optionally, enter a description in the Description field. Copy and paste the following YAML code into the YAML editor . food-delivery-backend.yaml --- apiVersion : apps/v1 kind : Deployment metadata : name : apiservice namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : apiservice replicas : 1 template : metadata : labels : name : apiservice spec : containers : - image : anthonyamanse/apiservice:1.0.ddc name : apiservice imagePullPolicy : Always ports : - containerPort : 8080 env : - name : STATUS_SERVICE value : 'http://status:8080' - name : BOOTSTRAP_SERVERS value : 'kafka:9092' --- apiVersion : v1 kind : Service metadata : name : apiservice namespace : Demo-UUID labels : razee/watch-resource : detail spec : ports : - port : 8080 targetPort : 8080 selector : name : apiservice --- apiVersion : apps/v1 kind : Deployment metadata : name : courier namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : courier replicas : 1 template : metadata : labels : name : courier spec : containers : - image : anthonyamanse/courierconsumer:1.0.ddc imagePullPolicy : Always name : courier env : - name : MONGODB_REPLICA_HOSTNAMES value : 'mongo:27017' - name : BOOTSTRAP_SERVERS value : 'kafka:9092' --- apiVersion : apps/v1 kind : Deployment metadata : name : kitchen namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : kitchen replicas : 1 template : metadata : labels : name : kitchen spec : containers : - image : anthonyamanse/kitchenconsumer:1.0.ddc imagePullPolicy : Always name : kitchen env : - name : MONGODB_REPLICA_HOSTNAMES value : 'mongo:27017' - name : BOOTSTRAP_SERVERS value : 'kafka:9092' --- apiVersion : apps/v1 kind : Deployment metadata : name : orders namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : orders replicas : 1 template : metadata : labels : name : orders spec : containers : - image : anthonyamanse/orderconsumer:1.0.ddc imagePullPolicy : Always name : orders env : - name : MONGODB_REPLICA_HOSTNAMES value : 'mongo:27017' - name : BOOTSTRAP_SERVERS value : 'kafka:9092' --- apiVersion : apps/v1 kind : Deployment metadata : name : podconsumerdata namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : podconsumerdata replicas : 1 template : metadata : labels : name : podconsumerdata spec : serviceAccountName : deployer containers : - image : anthonyamanse/poddata:1.0.ddc imagePullPolicy : Always ports : - containerPort : 8080 name : podconsumerdata env : - name : POD_NAMESPACE valueFrom : fieldRef : fieldPath : metadata.namespace --- apiVersion : v1 kind : Service metadata : name : podconsumerdata namespace : Demo-UUID labels : razee/watch-resource : detail spec : ports : - port : 8080 targetPort : 8080 selector : name : podconsumerdata --- apiVersion : apps/v1 kind : Deployment metadata : name : realtimedata namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : realtimedata replicas : 1 template : metadata : labels : name : realtimedata spec : containers : - image : anthonyamanse/realtimedata:1.0.ddc imagePullPolicy : Always name : realtimedata ports : - containerPort : 8080 env : - name : BOOTSTRAP_SERVERS value : 'kafka:9092' --- apiVersion : v1 kind : Service metadata : name : realtimedata namespace : Demo-UUID labels : razee/watch-resource : detail spec : ports : - port : 8080 targetPort : 8080 selector : name : realtimedata --- apiVersion : apps/v1 kind : Deployment metadata : name : status namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : status replicas : 1 template : metadata : labels : name : status spec : containers : - image : anthonyamanse/statusservice:1.0.ddc imagePullPolicy : Always name : status ports : - containerPort : 8080 env : - name : REDIS_URL value : 'redis' - name : REDIS_PORT value : '6379' - name : BOOTSTRAP_SERVERS value : 'kafka:9092' --- apiVersion : v1 kind : Service metadata : name : status namespace : Demo-UUID labels : razee/watch-resource : detail spec : ports : - port : 8080 targetPort : 8080 selector : name : status Search and replace all instances of Demo-UUID with your unique Demo-UUID . The YAML editor in the IBM Cloud portal has a search and replace function. Type Ctrl +f or Cmd +f (this will vary depending on your computers operating system). Expand the dialog by clicking the icon next to the entry field. In the first entry field, enter Demo-UUID . In the second entry field, enter your unique Demo-UUID . The dialog should update with a \"1 of 11\" message. Click the replace all icon to make the changes. Click Add . Repeat the process and create a version called food-delivery-frontend-v1 . For the Version name, use: food-delivery-frontend-v1 Optionally, enter a description in the Description field. Copy and paste the following YAML code into the YAML editor . food-delivery-frontend-v1.yaml --- apiVersion : apps/v1 kind : Deployment metadata : name : example-food namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : example-food replicas : 1 template : metadata : labels : name : example-food spec : containers : - image : anthonyamanse/example-food-frontend:1.0.ddc name : example-food imagePullPolicy : Always ports : - containerPort : 8090 --- apiVersion : v1 kind : Service metadata : name : example-food namespace : Demo-UUID labels : razee/watch-resource : detail spec : ports : - port : 8090 targetPort : 8090 selector : name : example-food Search and replace all instances of Demo-UUID with your unique Demo-UUID . The YAML editor in the IBM Cloud portal has a search and replace function. Type Ctrl +f or Cmd +f (this will vary depending on your computers operating system). Expand the dialog by clicking the icon next to the entry field. In the first entry field, enter Demo-UUID . In the second entry field, enter your unique Demo-UUID . The dialog should update with a \"1 of 2\" message. Click the replace all icon to make the changes. Click Add . Repeat the process and create a version called food-delivery-frontend-v2 . For the Version name, use: food-delivery-frontend-v2 Optionally, enter a description in the Description field. Copy and paste the following YAML code into the YAML editor . food-delivery-frontend-v2.yaml --- apiVersion : apps/v1 kind : Deployment metadata : name : example-food namespace : Demo-UUID labels : razee/watch-resource : detail spec : selector : matchLabels : name : example-food replicas : 1 template : metadata : labels : name : example-food spec : containers : - image : anthonyamanse/example-food-frontend:2.0.ddc name : example-food imagePullPolicy : Always ports : - containerPort : 8090 --- apiVersion : v1 kind : Service metadata : name : example-food namespace : Demo-UUID labels : razee/watch-resource : detail spec : ports : - port : 8090 targetPort : 8090 selector : name : example-food Search and replace all instances of Demo-UUID with your unique Demo-UUID . The YAML editor in the IBM Cloud portal has a search and replace function. Type Ctrl +f or Cmd +f (this will vary depending on your computers operating system). Expand the dialog by clicking the icon next to the entry field. In the first entry field, enter Demo-UUID . In the second entry field, enter your unique Demo-UUID . The dialog should update with a \"1 of 2\" message. Click the replace all icon to make the changes. Click Add . Repeat the process and create a version called development-route . For the Version name, use: development-route Optionally, enter a description in the Description field. Copy and paste the following YAML code into the YAML editor . development-route.yaml apiVersion : route.openshift.io/v1 kind : Route metadata : name : example-food namespace : Demo-UUID spec : host : example-food-Demo-UUID.aws-os-cluster-222b3514854c2221251113b2b051506c-0000.upi.containers.appdomain.cloud port : targetPort : 8090 to : kind : Service name : example-food --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : apiservice-path-creatorder namespace : Demo-UUID spec : host : example-food-Demo-UUID.aws-os-cluster-222b3514854c2221251113b2b051506c-0000.upi.containers.appdomain.cloud path : \"/createOrder\" port : targetPort : 8080 to : kind : Service name : apiservice --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : apiservice-path-status namespace : Demo-UUID spec : host : example-food-Demo-UUID.aws-os-cluster-222b3514854c2221251113b2b051506c-0000.upi.containers.appdomain.cloud path : \"/status\" port : targetPort : 8080 to : kind : Service name : apiservice --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : apiservice-path-restaurants namespace : Demo-UUID spec : host : example-food-Demo-UUID.aws-os-cluster-222b3514854c2221251113b2b051506c-0000.upi.containers.appdomain.cloud path : \"/restaurants\" port : targetPort : 8080 to : kind : Service name : apiservice --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : apiservice-path-user namespace : Demo-UUID spec : host : example-food-Demo-UUID.aws-os-cluster-222b3514854c2221251113b2b051506c-0000.upi.containers.appdomain.cloud path : \"/user\" port : targetPort : 8080 to : kind : Service name : apiservice --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : realtimedata-path-events namespace : Demo-UUID spec : host : example-food-Demo-UUID.aws-os-cluster-222b3514854c2221251113b2b051506c-0000.upi.containers.appdomain.cloud path : \"/events\" port : targetPort : 8080 to : kind : Service name : realtimedata --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : podconsumerdata-path-consumers namespace : Demo-UUID spec : host : example-food-Demo-UUID.aws-os-cluster-222b3514854c2221251113b2b051506c-0000.upi.containers.appdomain.cloud path : \"/consumers\" port : targetPort : 8080 to : kind : Service name : podconsumerdata --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : favorites-path namespace : Demo-UUID spec : host : example-food-Demo-UUID.aws-os-cluster-222b3514854c2221251113b2b051506c-0000.upi.containers.appdomain.cloud path : \"/favorites\" port : targetPort : 8080 to : kind : Service name : ksql-controller --- Search and replace all instances of Demo-UUID with your unique Demo-UUID . The YAML editor in the IBM Cloud portal has a search and replace function. Type Ctrl +f or Cmd +f (this will vary depending on your computers operating system). Expand the dialog by clicking the icon next to the entry field. In the first entry field, enter Demo-UUID . In the second entry field, enter your unique Demo-UUID . The dialog should update with a \"1 of 16\" message. Click the replace all icon to make the changes. Click Add . Repeat the process and create a version called production-route . For the Version name, use: production-route Optionally, enter a description in the Description field. Copy and paste the following YAML code into the YAML editor . production-route.yaml apiVersion : route.openshift.io/v1 kind : Route metadata : name : example-food namespace : Demo-UUID spec : host : example-food-Demo-UUID.ibmcloud-wdc-os-222b3514854c2221251113b2b051506c-0000.us-east.containers.appdomain.cloud port : targetPort : 8090 to : kind : Service name : example-food --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : apiservice-path-creatorder namespace : Demo-UUID spec : host : example-food-Demo-UUID.ibmcloud-wdc-os-222b3514854c2221251113b2b051506c-0000.us-east.containers.appdomain.cloud path : \"/createOrder\" port : targetPort : 8080 to : kind : Service name : apiservice --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : apiservice-path-status namespace : Demo-UUID spec : host : example-food-Demo-UUID.ibmcloud-wdc-os-222b3514854c2221251113b2b051506c-0000.us-east.containers.appdomain.cloud path : \"/status\" port : targetPort : 8080 to : kind : Service name : apiservice --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : apiservice-path-restaurants namespace : Demo-UUID spec : host : example-food-Demo-UUID.ibmcloud-wdc-os-222b3514854c2221251113b2b051506c-0000.us-east.containers.appdomain.cloud path : \"/restaurants\" port : targetPort : 8080 to : kind : Service name : apiservice --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : apiservice-path-user namespace : Demo-UUID spec : host : example-food-Demo-UUID.ibmcloud-wdc-os-222b3514854c2221251113b2b051506c-0000.us-east.containers.appdomain.cloud path : \"/user\" port : targetPort : 8080 to : kind : Service name : apiservice --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : realtimedata-path-events namespace : Demo-UUID spec : host : example-food-Demo-UUID.ibmcloud-wdc-os-222b3514854c2221251113b2b051506c-0000.us-east.containers.appdomain.cloud path : \"/events\" port : targetPort : 8080 to : kind : Service name : realtimedata --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : podconsumerdata-path-consumers namespace : Demo-UUID spec : host : example-food-Demo-UUID.ibmcloud-wdc-os-222b3514854c2221251113b2b051506c-0000.us-east.containers.appdomain.cloud path : \"/consumers\" port : targetPort : 8080 to : kind : Service name : podconsumerdata --- apiVersion : route.openshift.io/v1 kind : Route metadata : name : favorites-path namespace : Demo-UUID spec : host : example-food-Demo-UUID.ibmcloud-wdc-os-222b3514854c2221251113b2b051506c-0000.us-east.containers.appdomain.cloud path : \"/favorites\" port : targetPort : 8080 to : kind : Service name : ksql-controller --- Search and replace all instances of Demo-UUID with your unique Demo-UUID . The YAML editor in the IBM Cloud portal has a search and replace function. Type Ctrl +f or Cmd +f (this will vary depending on your computers operating system). Expand the dialog by clicking the icon next to the entry field. In the first entry field, enter Demo-UUID . In the second entry field, enter your unique Demo-UUID . The dialog should update with a \"1 of 16\" message. Click the replace all icon to make the changes. Click Add . Verify the six (6) versions have been created. You should see a total of seven versions. The six that you created: kafka-mongo-redis food-delivery-backend food-Delivery-frontend-v1 food-delivery-frontend-v2 develoment-route production-route and the one, used to create your specific projects in the OpenShift clusters.","title":"Create versions"},{"location":"deploy-application/03.03%20Create%20subscriptions/","text":"Now that the Configuration and Versions have been created, the next step is to create subscriptions for the Food Delivery application. In total, six subscriptions will be created: Subscription name Version Cluster group(s) kafka-mongo-redis-on-all-clusters kafka-mongo-redis food-delivery-production-clusters food-delivery-development-clusters backend-on-all-clusters food-delivery-backend food-delivery-production-clusters food-delivery-development-clusters frontend-on-dev-clusters food-delivery-frontend-v1 food-delivery-development-clusters frontend-on-prod-clusters food-delivery-frontend-v1 food-delivery-production-clusters route-dev development-route food-delivery-development-clusters route-prod production-route food-delivery-production-clusters These subscriptions will use the versions you created to deploy the code to the selected OpenShift clusters. If you closed the IBM Cloud portal after the previous step, open the IBM Cloud portal to the Satellite Configurations page: https://cloud.ibm.com/satellite/configuration . Click the the configuration based upon your Demo-UUID Click the Create subscription + button on the Overview page under Subscriptions. Danger Do NOT delete any existing subscriptions! These are used to create the OpenShift namespace you will be using in this demonstration. Deleting them will break the demonstration. Create the kafka-mongo-redis-on-all-clusters subscription. Use the following values for the Create a subscription dialog: Subscription name kafka-mongo-redis-on-all-clusters Version kafka-mongo-redis Cluster groups food-delivery-production-clusters food-delivery-development-clusters Click Create for the kafka-mongo-redis-on-all-clusters subscription. Verify the kafka-mongo-redis-on-all-clusters subscription is created and deployed. Immediately after clicking create, notice the new Subscription appears in the Subscriptions table. Initially, the Rollout status shows \"---\" . After a few seconds, this should change to 2 deployed . Note If the status doesn't update automatically, click the page refresh button of your browser. Click the kafka-mongo-redis-on-all-clusters entry in the table and view the Subscription details. Do you see errors? If you see an \"Unable to fetch header secret data.\" error for the aws_os_cluster cluster like shown below, you need to re-run the command to synchronize the Role-based access controls for the IBM Cloud Satellite Location that you executed in Part 1: Using the IBM Cloud command line interfaces (CLIs) , steps 1 and 2. Occasionally, you may see a deployment fail for other reasons. Satellite config will continue to try to fulfill the subscription. If you see a failure, wait a few minutes and then refresh your browser page to get the latest status. If you continue to see failures, you need to verify the versions created in the previous step are correct. Make sure you successfully replaced all instances of #######abc-ns with your Demo-UUID . If the failures continue, please report the issue using the slack channel specified in TechZone. Note In some circumstances, you may see more than 2 entries in the details section. As long as you have a successful deployment to the specified cluster groups, you can continue. Click your configuration link to return to the configuration page. Repeat the above process (steps 3 through 8) for each of the remaining subscriptions. Subscription Name Version Cluster group(s) backend-on-all-clusters food-delivery-backend food-delivery-production-clusters food-delivery-development-clusters frontend-on-dev-clusters food-delivery-frontend-v1 food-delivery-development-clusters frontend-on-prod-clusters food-delivery-frontend-v1 food-delivery-production-clusters route-dev development-route food-delivery-development-clusters route-prod production-route food-delivery-production-clusters To avoid typographical errors, use the to copy the values below and paste into the Subscription name field. Note Pay special attention to the cluster group(s) that need to be specified for each subscription as shown in the table above! Specifying the wrong group(s) will cause problems with the demonstration. backend-on-all-clusters frontend-on-dev-clusters frontend-on-prod-clusters route-dev route-prod Verify all Subscriptions are created and deployed. Info In the next step you will access the Red Hat OpenShift portal to further verify the application has been deployed. You will also access the application and make updates to it using the food-delivery-frontend-v2 version.","title":"Create subscriptions"},{"location":"deploy-application/03.04%20Verify%20the%20application%20is%20deployed/","text":"At this point, the application should be identically deployed to both the development (AWS) and production (IBM Cloud) clusters. This can be verified by looking at the OpenShift console for the development cluster running at the IBM Cloud Satellite Location in AWS and the cluster running in IBM Cloud. If not already open, open the IBM Cloud portal to the Clusters: https://cloud.ibm.com/satellite/clusters . Click the aws-os-cluster label. Be sure to click the correct label as illustrated in the image below. Click the Manage cluster button. This will open a new browser window or tab to the cluster's overview page in the IBM Cloud portal. Click the OpenShift web console button. This will open a new browser window or tab to the OpenShift web console for the cluster. You may need to close any pop-up dialogs regarding tutorials. Click the Topology link in left hand navigation. If not already selected, select the project based upon your Demo-UUID from the Topology view. Info The image capture below is different than what you will see. Be sure and select the project (namespace) created for you based upon your Demo-UUID . Verify all the Deployments for the Food Delivery application are present. The image capture below may differ slightly from what you see. It is important to point out the Deployments represented here were created from the Subscriptions to the Versions you created for the Configuration . Notice that some of the Deployments have routes added to them. Routes are represented by the . Verify the application frontend is running by clicking the route icon for the example-food deployment. A new browser window or tab should be opened to the Food Delivery application frontend. Explore the Food Delivery application. Start simulating orders into the system by clicking the START button. Notice the orders being received and fulfilled in the graph on lower right of the interface. These values represent orders moving through ordering to fulfillment. You can adjust the rate that orders are processed as well has the rate of kitchen time and delivery services. Orders should start being fulfilled after a minute or two. Warning You may experience a delay in the application reporting orders being fulfilled. This usually occurs when the demonstration environment is experiencing heavy usage or starting for the first time. You can increase the speed of couriers and speed of kitchens by adjusting the sliders. R Repeat steps 2 through 9 for the production environment cluster: ibmcloud-wdc-os . Use this link to open the IBM Cloud OpenShift clusters page: https://cloud.ibm.com/kubernetes/clusters?platformType=openshift .","title":"Verify the application is deployed"},{"location":"deploy-application/04.01%20Update%20the%20development%20and%20production%20frontends/","text":"Now the Food Delivery application is deployed, running, and verified. As we all know, today's applications never stay static. Development teams add new functions, backend business processes change, and bugs are fixed. This is where the power of IBM Cloud Satellite configurations, versions, and subscriptions come alive. To illustrate this, in the next few sections you will demonstrate a typical application flow. You will update the Food Delivery frontend in development, and then deploy that new frontend to the production environment. Open the IBM Cloud portal to the Configurations overview page: https://cloud.ibm.com/satellite/configuration . Click the configuration link based upon your Demo-UUID . Edit the frontend-on-dev-clusters Subscription. Change the version for the subscription to use the food-delivery-frontend-v2 and click Save . food-delivery-frontend-v2 Verify the Rollout status is updated. The Last updated column will have a very recent value. Question Remember how to get to this screen? Click the frontend-on-dev-clusters link in the Subscriptions table. Verify the Last updated field has a recent value (for example: 0 minutes ago). Verify the new frontend has been deployed to the development environment. There are several ways to verify the new frontend has been deployed. The simplest is to refresh the browser page for the application you opened earlier. Remember, you just updated the development environment. You will notice the application is now using a dark mode user interface. If you no longer have the application running in your browser, you can access it by repeating step eight in 03.04 Verify the application is deployed . The capabilities of the application are the same, but the user interface has changed. This was accomplished by using a new container image for the application that was specified in the food-delivery-frontend-v2 version YAML. Frontend v1 YAML specification: Example spec: containers: - image: anthonyamanse/example-food-frontend:1.0.ddc name: example-food imagePullPolicy: Always ports: - containerPort: 8090 Frontend v2 YAML specification: Example spec: containers: - image: anthonyamanse/example-food-frontend:2.0.ddc name: example-food imagePullPolicy: Always ports: - containerPort: 8090 Another way to see that the application was updated by the subscription is to view the event log in the OpenShift web console for the development cluster. There you will see that one of the example-food pods was deleted and a new one started. Repeat steps 2 through 6 to deploy the food-delivery-frontend-v2 version to the frontend-on-prod-clusters subscription.","title":"Update the development and production frontends"},{"location":"deploy-application/04.02%20Perform%20a%20rollback/","text":"The next step is optional for client demonstrations. Sometimes, updates need to be rolled back. This is achieved by reverting from the current version to a previous one. The steps are the same as those performed in the last exercise. In this case, edit the frontend-on-prod-clusters subscription and change from the food-delivery-frontend-v2 version back to the food-delivery-frontend-v1 version .","title":"Perform a rollback"},{"location":"deploy-application/05.01%20Next%20steps/","text":"In Part 4, learn how to prepare for a client demonstration using everything you learned in Parts 1, 2, and 3 of this learning activity.","title":"Next steps"},{"location":"deploy-sat-enabled-services/01.01%20Introduction/","text":"Many IBM Cloud services are enabled for IBM Cloud Satellite including IBM Cloud databases, IBM Event Streams, IBM Key Protect, Red Hat OpenShift on IBM Cloud, and others. In the future, more services will be enabled for IBM Cloud Satellite. In this part of the demonstration, you will learn how to find the all the IBM Cloud services that are enabled for Satellite using the IBM Cloud portal. In addition, you will see how Red Hat OpenShift on IBM Cloud was provisioned in this demonstration environment and how you can demonstrate this process. Red Hat OpenShift on IBM Cloud is a fully managed deployment of Red Hat OpenShift that is managed by IBM. In this demonstration environment, the OpenShift cluster has already been deployed to the IBM Cloud Satellite Location running in AWS. In the next chapters, you will learn how this was done and how you can demonstrate this to your client. Note, when originally provisioned, the fully automated process took approximately 45 minutes from start to finish. The cluster that was deployed has 9 worker nodes (labeled as additional hosts in image below), 3 per availability zone in the Satellite Location. The Satellite Control Plane also acts as the master nodes for this cluster. The logical deployment architecture is depicted below. Note: the public facing IP addresses for both the additional hosts (aka worker nodes) and the satellite control plane hosts in AWS have been exposed for the purposes of this demonstration. For proof-of-concepts (POCs) or production environments, a best practice would be to use the private IP addresses and Virtual Private Networks (VPNs) to establish connectivity. You can read more about this in the IBM Cloud Satellite documentation .","title":"Introduction"},{"location":"deploy-sat-enabled-services/02.01%20ExploreSatServices/","text":"You can easily find all the IBM Cloud Satellite enabled services using the IBM Cloud portal. Important In this demonstration environment, you will NOT have the permissions to provision new services. However, you can explore the IBM Cloud Satellite enabled services. Open the IBM Cloud portal to the IBM Cloud Catalog page: https://cloud.ibm.com/catalog Change from your IBM Cloud account to the 2435442 - ITZ - Satellite account. Tip If your browser window is narrow, you may see this icon: instead of the current account name as shown in the screen capture above. Scroll down to the Works with section of the left-hand navigation bar. Click the Satellite Enabled check box. Your page is now filtered to view all the IBM Cloud Satellite enabled services. You can learn more about each of these by clicking on the respective tiles and then clicking on the About tab for the selected service. It is important to remember that the catalog of Satellite enabled services will continue to grow. At this time, you should explore each of the services to learn more about them. In the next section, see how Red Hat OpenShift on IBM Cloud was deployed to the demonstration environment.","title":"Explore Satellite enabled services"},{"location":"deploy-sat-enabled-services/03.01%20Watch%3A%20Deploy%20ROKS%20to%20Sat/","text":"This video shows the provisioning of a Red Hat OpenShift on IBM Cloud to an IBM Cloud Satellite Location in AWS. The video has been edited to minimize the viewing time and does not reflect the actual provisioning time of an OpenShift cluster. The actual provisioning time (from clicking \"Create\" to the clusters being ready) will vary. When this video was created, it took approximately 50 minutes for the cluster to be provisioned in the Satellite location in AWS. Use this video to understand the talking points you can use with a client when describing the provisioning process. Note: If the video appears blurry, click the fullscreen or icon.","title":"Watch: Deploying Red Hat OpenShift to an IBM Cloud Satellite Location"},{"location":"deploy-sat-enabled-services/04.01%20Demonstrate%3A%20Provision%20ROKS%20to%20Sat/","text":"Demonstrating how to provision an IBM Cloud Satellite enabled service may be of interest to some audiences, but this activity is typically done only a couple of times by a client and is usually performed by their technical team. This demonstration does not illustrate the real business value of IBM Cloud Satellite. It is included in this asset for completeness. If you have limited time to perform a live demonstration, you may want to briefly cover this process and move on to some of the other demonstrations described in later parts of the demonstration script. There are several approaches you can take in doing an actual demonstration of the provisioning process of a Satellite enabled IBM Cloud service. Play the video in the previous chapter to the client. It includes both narration and annotations. Use the raw video (below) from the previous chapter and provide your own narration to the video. You will want to pause the video at appropriate locations based upon your narration and any questions your client may have. Info This video has no sound and is intended to be played while you narrate. Also, the IBM Cloud portal and the IBM Cloud Satellite product changes regularly. You may notice some differences between the video and the actual user interface and experience you see today. Note: If the video appears blurry, click the fullscreen or icon. Alternatively, you could also do this demonstration using the IBM Cloud portal up to the point of clicking the \"Create\" button. Then switch to the already provisioned cluster and describe what took place during the provisioning process. This \"baking show\" approach shows all the steps, but avoids the delays that would be required to perform the provisioning of resources. The steps below can be used as a guide for this style of demonstration: Launch the IBM Cloud portal to the Satellite enabled catalog page: https://cloud.ibm.com/catalog?search=label%3Asatellite_enabled . Tip The IBM Cloud Portal will be opened in a new browser tab. You need to switch between this tab and the new tab to accomplish many of the tasks. You may want to open the new tab in a new window and display both browser windows at the same time. You may need to disable pop-up blockers if you do not see the new tab. Also, Firefox and Safari browsers are recommended as the image quality of screen captures when viewed in Chrome are sub-optimum. Sample dialog: The current catalog for IBM Cloud Satellite enabled services include IBM Cloud Databases like etcd, PostgreSQL, Redis, and RabbitMQ. In addition, IBM Event Streams is available and provides a high-throughput message bus with Apache Kafka. There is also IBM Key Protect for IBM Cloud for managing cryptographic keys for data protection. And we also support Red Hat OpenShift on IBM Cloud as well as Cloud Object Storage. If you haven't already, change from your IBM Cloud account to the demonstration IBM Cloud account: 2435442 - ITZ - Satellite *. Tip If your browser window is narrow, you may see this icon: instead of the current account name as shown in the screen capture above. Click the Red Hat OpenShift on IBM Cloud tile. Sample dialog: For this demonstration, I'll show you how simple it is to deploy these Satellite enabled services. Red Hat OpenShift on IBM Cloud provides a managed container platform for running enterprise workloads in Kubernetes clusters. With OpenShift on IBM Cloud, you only need to focus on your applications and IBM will manage the platform. Select the Satellite tile under the Infrastructure section. Sample dialog: Red Hat OpenShift on IBM Cloud is support in the IBM Cloud classic and Virtual Private Cloud (VPC) environments, as well as Satellite. In the Location section, select the aws-us-east-2 location in the table. Sample dialog: Once I select Satellite, I just need to specify the IBM Cloud Satellite location where I want to deploy OpenShift. As a prerequisite, the Satellite Location will need hosts available for the deployment to succeed. As you will recall, when we created our Satellite Location, we provisioned 3 hosts for the control plane, and 9 hosts as worker nodes. I'll use those 9 hosts as my OpenShift worker nodes, place 3 in each of the 3 availability zones in our Satellite Location. Change cluster name to aws_os_cluster. Important Once you specify a name, the Create button at the far right of the portal would typically be enabled. Since you do not have the appropriate permissions in this account to create a new cluster, the button remains disabled. Now is the time to explain what happens if you were to click create. Sample dialog: That is all the information that is required. Now just click create and let the automated provisioning begin. When I originally provisioned the OpenShift environment in the AWS Satellite Location, it took about 50 minutes for the entire installation and configuration of the OpenShift cluster. Let us now look at an already provisioned cluster in our Satellite location. Click the menu and select Satellite->Clusters . Click aws_os_cluster in the Clusters table. Sample dialog: Here you see the cluster we provisioned and the cluster's current status. Time to wrap up this part of the demonstration. Sample dialog: We can retrieve the details of the cluster and manage it using the IBM Cloud portal as well as the OpenShift web console. From a Red Hat OpenShift on IBM Cloud perspective, this cluster is just like any other Red Hat OpenShift on IBM Cloud cluster running in IBM Cloud.","title":"Demonstrate: How to deploy Red Hat OpenShift to an IBM Cloud Satellite Location"},{"location":"deploy-sat-enabled-services/05.01%20Next%20steps/","text":"In this part of the demonstration script, you learned how to provision an IBM Cloud Satellite enabled service to a Satellite Location in AWS. As a next step, think about how you would demonstrate this capability to your client. Remember, several options were suggested. Keep in mind, demonstrating this capability does not necessarily illustrate the value proposition of IBM Cloud Satellite as you learned in your Level 2 training; however, it may appeal to more technical audiences. Make sure you consider your audience when you plan your demonstration. In Part 3, learn how to deploy and manage a cloud native application using IBM Cloud Satellite config .","title":"Next steps"},{"location":"environment/","text":"Environment lab","title":"Index"},{"location":"environment/01.01%20Introduction/","text":"IBM Cloud Satellite is an extension of the IBM Cloud that can run inside a client's data center, at the edge, in public clouds, or any location of the client\u2019s choice. The IBM Cloud Satellite managed distributed cloud solution delivers cloud services, APIs, access policies, security controls and compliance. This IBM Technology Sales Enablement demonstration is part of the Your Learning Level 3 learning path for IBM Cloud Satellite found here . The content here is not meant as a replacement for the Level 1 and 2 content that is part of that learning path. You should be familiar with IBM Cloud Satellite and should have completed the Cloud Satellite Sales Foundation Badge . This demonstration environment has a dual purpose. First, it is meant to educate you on IBM Cloud Satellite and how to demonstrate some of the capabilities of IBM Cloud Satellite to clients. In addition, the environment can be used for actual client demonstrations. Once you are familiar with the content, get in front of a client, and show the power of IBM Cloud Satellite. Important The focus of the demonstration is on the Infrastructure as a Service capability of IBM Cloud Satellite and not on the specific services deployed to a Satellite Location (for example: Red Hat OpenShift on IBM Cloud). Provisioning a Satellite Location on a public cloud like AWS, is automated and typically takes 25-30 minutes depending on the cloud provider, configuration of the servers being used, and other factors. Deploying Red Hat OpenShift on IBM Cloud to the Satellite Location usually takes another 30-45 minutes. In addition, to easily access resources on those servers you would need to either create a Virtual Private Network or manually make some network configuration changes. This can be time consuming and error prone and will typically take longer than most clients are willing to sit through. In this demonstration asset, an IBM Cloud Satellite environment has already been provisioned for you. Notice, in the table of contents of this guide, you will see: chapters that define specific terms chapters that contain videos of provisioning and configuration steps chapters that step you through a demonstration you can perform live for your client using the environment provided here In this demonstration environment, you will NOT have full access to the IBM Cloud Satellite capabilities. Your user ID will be restricted to specific capabilities. For example, you can: view Satellite Locations, Clusters, Cluster Groups, and Configurations using the IBM Cloud portal and Command Line Interfaces (CLIs) create new Versions and Subscriptions You will not have permissions to: create new Satellite Locations, Clusters, Cluster Groups, or Configurations deploy new IBM Cloud Services (for example: IBM Cloud Databases, Key Protect, etc.) Warning Attempting to perform an action that you do not have permissions for will result in an error message like the one below. This is not an issue with the IBM Cloud or IBM Cloud Satellite offering, rather just a restriction of the demo environment and the permissions assigned to users. This IBM Cloud Satellite demonstration is built using the IBM TechZone collection: Setup an IBM Cloud Satellite Location in AWS , which can be found here . You may want to leverage this resource to build a custom environment or client Proof-of-Concept (POC). You can also use this collection to perform client demonstrations, but be aware of the time required to provision, configure, and apply configuration changes to have a working environment (minimum 1-2 hours). In this part of the demonstration script, you will explore the provisioning of an IBM Cloud Satellite Location to a public cloud. In this case, AWS is the target public cloud. This initial deployment architecture is illustrated below. In addition to the Satellite location, in this demonstration environment a Red Hat OpenShift on IBM Cloud instance has been deployed to the Satellite Location running in AWS. You will explore the deployment of OpenShift and other IBM Cloud Satellite enabled services in Part 2 of this demonstration script.","title":"Introduction"},{"location":"environment/02.01%20What%20are%20Locations/","text":"A Satellite Location is a representation of an environment in your infrastructure provider, such as an on-premises data center or public cloud, that you want to bring IBM Cloud services to so that you can run workloads in your own environment. Creating a Satellite Location can be achieved through the IBM Cloud Portal, via the IBM Cloud Satellite command line interfaces or APIs. You create the location based off at least three separate zones of your infrastructure environment and attach host machines from across these zones in your infrastructure to the location. For other public cloud providers, IBM Cloud Satellite provides automation via IBM Cloud Schematics to setup the Location. For on-premises deployments, scripts are provided that will need to be run on the target host machines. You can directly access the Satellite Locations in IBM Cloud Portal through this link: https://cloud.ibm.com/satellite/locations Below is a screen capture of the IBM Cloud Portal Satellite Locations page with a single Location defined. Note: the physical location of the Satellite Location is not an attribute of the Location. You should reflect the physical location in the Satellite Location name. To learn more about Satellite Locations, refer to the Satellite Location product documentation: https://cloud.ibm.com/docs/satellite?topic=satellite-locations . Note: there are many requirements associated with creating a Satellite Location including: minimum host requirements network latency between Satellite Location hosts and IBM Cloud data centers and others.","title":"What are IBM Cloud Satellite Locations"},{"location":"environment/02.02%20Watch%3A%20How%20to%20provision%20a%20Location%20in%20AWS/","text":"This video shows the provisioning of an IBM Cloud Satellite Location in AWS. The video has been edited to minimize the viewing time and does not reflect the actual provisioning time of a Satellite Location. The actual provisioning time (from clicking \"Create location\" to the Location being ready) will vary. When this video was created, it took approximately 25 minutes for the 6 hosts to be provisioned in AWS and configured as a Satellite Location. Use this video to understand the talking points you can use with a client when describing the provisioning process. Note: If the video appears blurry, click the fullscreen or icon.","title":"Watch: How to provision a Location in AWS"},{"location":"environment/02.03%20Demonstrate%3A%20How%20to%20provision%20a%20Location/","text":"Demonstrating how to provision IBM Cloud Satellite may be of interest to some audiences, but this activity is typically done only a couple of times by a client and is usually performed by their technical team. This demonstration does not illustrate the real business value of IBM Cloud Satellite. It is included in this asset for completeness. If you have limited time to perform a live demonstration, you may want to briefly cover this process and move on to some of the other demonstrations described in later demonstrations. There are several approaches you can take in doing an actual demonstration of the provisioning process of a Satellite Location. Play the video in the previous chapter to the client. It includes both narration and annotations. Use the raw video (below) from the previous chapter and provide your own narration to the video. You will want to pause the video at appropriate locations based upon your narration and any questions your client may have. Info This video has no sound and is intended to be played while you narrate. Also, the IBM Cloud portal and the IBM Cloud Satellite product changes regularly. You may notice some differences between the video and the actual user interface and experience you see today. Note: If the video appears blurry, click the fullscreen or icon. Alternatively, you could also do this demonstration using the IBM Cloud portal up to the point of clicking the \"Create location\" button. Then switch to the location view of an already provisioned location and describe what took place during the provisioning process. This \"baking show\" approach shows all the steps, but avoids the delays that would be required to perform the provisioning of resources. Info In this environment, you will not have the AWS credentials to input in the portal to provision an AWS Location. For this type of demo, you can use the \"On-premises & edge\" location template instead of the AWS template and describe the differences based on what you saw in the provisioning video. The steps below can be used as a guide for this style of demonstration: Launch the IBM Cloud portal: https://cloud.ibm.com/satellite/overview . Tip The IBM Cloud Portal will be opened in a new browser tab. You need to switch between this tab and the new tab to accomplish many of the tasks. You may want to open the new tab in a new window and display both browser windows at the same time. You may need to disable pop-up blockers if you do not see the new tab. Also, Firefox and Safari browsers are recommended as the image quality of screen captures when viewed in Chrome are sub-optimum. Change from your IBM Cloud account to the demonstration IBM Cloud account: 2435442 - ITZ - Satellite *. Tip If your browser window is narrow, you may see this icon: instead of the current account name as shown in the screen capture above. If you do not see the 2435442 - ITZ - Satellite listed, verify you accepted the invitation from IBM Cloud to join the account and that your IBM Technology Zone environment is active. Click Create a Satellite Location . Describe the Location templates page. Sample dialog: IBM Cloud Satellite Locations can be anywhere. IBM provides templates for several public cloud providers like AWS, Microsoft, and Google. The public cloud provider templates automate the provisioning of the remote compute, memory, and storage resources. Once the servers are provisioned, the automation deploys the IBM Cloud Satellite control plane software, configures the environment, and puts it under the management of IBM Cloud site reliability engineers (SREs). Click the On-premises & edge tile. Click the Edit link. Sample dialog: For on-premises deployments or to other public cloud providers, the process has a few more manual steps. You will want to provide a descriptive name and any tags to better identify the Location. You will also need to select the Managed from location. This is the IBM Cloud data center that will be used to manage the Satellite Location. You will want to select the IBM Cloud data center that is nearest to your Satellite Location as there are latency requirements. In addition, you can specify the names of availability zones within your Satellite Location. Ideally, you will provision servers in separate physical zones to provide high availability to your cloud services. And finally, you will need to provide an IBM Cloud Object Storage instance that will be used for backups of the IBM Cloud Satellite control plane. Once that is complete, you click \"Create location\". This will create a script that you will then need to download, install, and run on each of the servers in the Satellite Location. The script will download the IBM Cloud Satellite control plane software, install, configure, and put the Satellite Location under IBM's control. Click the Locations link at top left of screen. Sample dialog: Once the Satellite Location is fully deployed, you can access the details of the Location. Here you see the current Satellite Locations that have been deployed, their state, and additional information. Let us look at the details of one of these. Click aws-us-east-2 . Important The actual details may differ from the screen capture above. You will want to adjust your dialog to what you see. Sample dialog: Here we see the details and status of our Satellite Location. Notice we have 12 hosts at this Location, and they are all currently in the \"assigned\" state. Typically, when a Satellite Location is first provisioned, you will see 3 hosts assigned and the others in the unassigned state. The first 3 hosts are used for the IBM Cloud Satellite control plane. Additional hosts are used to deploy IBM Cloud Services like managed Red Hat OpenShift or IBM Cloud Databases. Click Hosts . Sort the table by clicking the Cluster menu item in the table header. Sample dialog: Here we see the details for each host that has been deployed at our Satellite Location. Notice the Status and Availability fields. In this Location, we see that we have our 3 Control plane hosts and the other 9 are used by a Red Hat OpenShift cluster. These 9 hosts are the worker nodes in our Red Hat OpenShift cluster. Click the Attach host button. Sample dialog: If we want to add additional hosts to the Satellite Location, we can do so by going here and specifying the tags we want to use to label the host and then downloading the configuration script. At this time, there is not automation for adding additional hosts to an existing Location, so we will need to provision the hardware, download the configuration script, and run the script. Once complete, the host will be moved under IBM management and appear as a new host at our Location in a \"unassigned\" state. Click Cancel . Sample dialog: That is a brief overview of how to provision an IBM Cloud Satellite Location. We will cover services, link endpoints, and other IBM Cloud Satellite capabilities later. Any questions?","title":"Demonstrate: How to provision a Location"},{"location":"environment/03.01%20What%20are%20Links/","text":"With Satellite Link endpoints, you can allow software that runs in your Satellite location to connect to a service, server, or application that runs outside of the Satellite Location. Links can also allow software that is connected to the IBM Cloud private network to connect to a service, server, or application that runs in your Satellite Location. To establish the connection, you must specify the destination resource's fully qualified domain name (FQDN) or IP address, port, the connection protocol, and any authentication methods at the endpoint. The endpoint is registered with the Satellite Link component of your Location's Satellite control plane. To help you maintain enterprise security and audit compliance, Satellite Link additionally provides built-in controls to restrict client access to endpoints, and to log and audit traffic that flows over endpoints. Satellite Links are not used in these demonstrations but are an important concept to understand. For more information on Links, read the documentation here .","title":"What are Links"},{"location":"environment/04.01%20Using%20the%20IBM%20Cloud%20command%20line%20interfaces%20%28CLIs%29/","text":"Command Line Interfaces (CLIs) are available for IBM Cloud Satellite. In this section, explore the CLI capabilities related to IBM Cloud Satellite Locations. You can learn more about all the IBM Cloud Satellite CLIs here . When doing client demonstrations, it is important to understand who is in your audience. Performing demonstrations of CLIs to a Chief Technology Officer (CTO) or Chief Information Officer (CIO) may not be well received; however, this type of demonstration may resonate well with other audiences like members of the IT staff, line-of-business developers, and others. These audiences will want to know that CLIs exist to perform the IBM Cloud Satellite tasks as they will probably want to further automate them in their deployments. In this part of the demonstration, you will use the IBM Cloud Shell. If you are not familiar with IBM Cloud Shell, you can learn about it here . Tip Use the copy capability of the demonstration guide to copy and paste commands to the IBM Cloud Command Shell to avoid typing errors. In the IBM Cloud Portal, with the demonstration account selected ( 2435442 - ITZ - Satellite ), click the IBM Cloud Shell icon. The IBM Cloud Shell will open in a new browser tab or window. It may take a few seconds for the shell to initialize. Synchronize the Role-based access controls (RBAC) for the IBM Cloud Satellite Location's OpenShift cluster. ibmcloud ks cluster config --cluster c7o5jt8w0o6g5fkl3rp0 Example output OK The configuration for c7o5jt8w0o6g5fkl3rp0 was downloaded successfully. Added context for c7o5jt8w0o6g5fkl3rp0 to the current kubeconfig file. You can now execute 'kubectl' commands against your cluster. For example, run 'kubectl get nodes'. If you are accessing the cluster for the first time, 'kubectl' commands might fail for a few seconds while RBAC synchronizes. Important The above command forces the RBAC to be synchronized between IBM Cloud and the Red Hat OpenShift cluster running in the IBM Cloud Satellite Location. If this command is not run, issues may be encountered later in this demonstration. List the IBM Cloud Satellite Locations. ibmcloud sat locations Example output Retrieving locations... OK Name ID Status Ready Created Hosts (used/total) Managed From aws-us-east-2 c7o2a02w03bj8394o9ng normal yes 1 day ago 12 / 12 wdc Get the details for a specific IBM Cloud Satellite Location. ibmcloud sat location get --location aws-us-east-2 Example output Retrieving location... OK Name: aws-us-east-2 ID: c7o2a02w03bj8394o9ng Created: 2022-01-25 16:27:44 +0000 (1 day ago) Managed From: wdc State: normal Ready for deployments: yes Message: R0001: The Satellite location is ready for operations. Hosts Available: 0 Hosts Total: 12 Host Zones: us-east-2a, us-east-2b, us-east-2c Public Service Endpoint URL: https://c117.us-east.satellite.cloud.ibm.com:30051 Private Service Endpoint URL: - OpenVPN Server Port: 32196 Ignition Server Port: - Konnectivity Server Port: - Get a list of the hosts associated with a specific IBM Cloud Satellite Location. ibmcloud sat hosts --location aws-us-east-2 Example output Retrieving hosts... OK Name ID State Status Zone Cluster Worker ID Worker IP ip-10-0-1-114 b7f18e883cd88cace8d7 assigned Ready us-east-2a aws-os-cluster sat-ip1001114-df552aab5e6958f69e3e2004ff8de9e21e941cdf 10.0.1.114 ip-10-0-1-250 e30ad9324972c7197d8b assigned Ready us-east-2a aws-os-cluster sat-ip1001250-4a2ea8e29c0222974e39d954a4e20f26b7ee702a 10.0.1.250 ip-10-0-1-51 31ce10f9188d8f39f498 assigned Ready us-east-2a aws-os-cluster sat-ip100151-7fe9c382d5b86bd3de7113f65189bcbf5c720ab3 10.0.1.51 ip-10-0-1-80 d22325e1dc4741fd12f2 assigned Ready us-east-2a infrastructure sat-ip100180-9506c0d50c1faf25ebdee971cd8fb04b03a85f46 10.0.1.80 ip-10-0-2-179 c092b543a00d50b93890 assigned Ready us-east-2b aws-os-cluster sat-ip1002179-f4a6bd55983e7e0a8d1071b073dd7bdc983d3f80 10.0.2.179 ip-10-0-2-4 3839f171b846beb1c1e9 assigned Ready us-east-2b aws-os-cluster sat-ip10024-2dd947a2bfbbbc129e2c1b618c0e135481ac44b8 10.0.2.4 ip-10-0-2-49 58a414bd88d303fca850 assigned Ready us-east-2b aws-os-cluster sat-ip100249-4394d34dc43811c985e6211df97abe31472a8a69 10.0.2.49 ip-10-0-2-92 ba5337e855ee8b94477f assigned Ready us-east-2b infrastructure sat-ip100292-92e16bb3dffb35810fd8fe8a5003abf1745adf81 10.0.2.92 ip-10-0-3-101 a2650ddf093fbb8b70bc assigned Ready us-east-2c aws-os-cluster sat-ip1003101-2584aa634011ba4d8a0f57986f4f6f087fa895cf 10.0.3.101 ip-10-0-3-111 6dab45fb390d80f5c4d2 assigned Ready us-east-2c aws-os-cluster sat-ip1003111-5c9a519ad61010c17548c540a510d738f296d975 10.0.3.111 ip-10-0-3-157 f00f81d01b6860e050df assigned Ready us-east-2c infrastructure sat-ip1003157-62a198744fdd0577ea0640a816f8a2f35d2a2198 10.0.3.157 ip-10-0-3-63 4a856f18f177ffc014eb assigned Ready us-east-2c aws-os-cluster sat-ip100363-6bcb834add6d924ce2a0a0772835ae8794497162 10.0.3.63 If this fails Occasionally, the above command may time out with a \"FAILED: Could not complete request\" message. Try running the command again. Get the details for a specific host. Tip You may need to replace the string ip-10-0-1-114 with the name of one of the hosts from the previous command. ibmcloud sat host get --location aws-us-east-2 --host ip-10-0-1-114 Example output Retrieving host details... Name: ip-10-0-1-114 ID: b7f18e883cd88cace8d7 State: assigned Status: Ready Zone: us-east-2a Labels cpu 4 env prod memory 15963200 os RHEL7 zone us-east-2a Assignment Cluster: aws-os-cluster Worker Pool: default Worker ID: sat-ip1001114-df552aab5e6958f69e3e2004ff8de9e21e941cdf Worker IP: 10.0.1.114 Date: 21 hours ago OK All the commands executed above are commands that list or view the details of an IBM Cloud Satellite object. There are also commands to create, remove, and modify these objects. You will perform these types of actions in a later demonstration. In this demonstration environment, you do not have permissions to add, remove or change Locations or Hosts. AWS CLI install steps curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" -q mkdir awsinstall mkdir bin ./aws/install -i awsinstall -b bin aws configure Extra Credit Did you know you can install the AWS command line utilities in your IBM Cloud Shell instance? It doesn't stay persistent, but it only takes a few seconds to install and configure. IBM Cloud Satellite clients may find this useful in managing their hybrid cloud environment. For this demonstration, we do not provide the credentials to complete the configuration.","title":"Using the IBM Cloud command line interfaces (CLIs)"},{"location":"environment/05.01%20Next%20steps/","text":"In this Part of the demonstration script, you learned how to provision an IBM Cloud Satellite Location in AWS use the IBM Cloud Satellite command line interfaces (CLIs) As a next step, think about how you would demonstrate this capability to your client. Remember, several options were suggested in Demonstrate: How to provision a Location . Keep in mind, demonstrating this capability does not necessarily illustrate the value proposition of IBM Cloud Satellite as you learned in your Level 2 training; however, it may appeal to more technical audiences. Make sure you consider your audience when you plan your demonstration. In Part 2, learn how to deploy an IBM Cloud Satellite enabled service to an IBM Cloud Satellite Location.","title":"Next steps"},{"location":"prepping-for-a-demo/01.01%20Introduction/","text":"In the first 3 parts of this activity, you learned how to: Provision an IBM Cloud Satellite Location Deploy an IBM Cloud Satellite enabled service Deploy and manage a cloud native application using IBM Cloud Satellite Config Now it is time to demonstrate this to a client or potential client. In the next activity in the IBM Cloud Satellite L3 for Sellers learning plan, you will view a video of a client facing demonstration for IBM Cloud Satellite using the same environment you have been using. In the next chapters, learn how the presenter in the video prepared to deliver the client demonstration.","title":"Introduction"},{"location":"prepping-for-a-demo/02.01%20The%20Big%20Event/","text":"To prepare for a client demonstration, it is important to: know your audience know what you want the audience to walk away with (goals of demonstration) define the flow of the demonstration In this scenario, we are preparing for a demonstration for a potential client. The IBM account team has scheduled a half day virtual session to give the client an overview of IBM Cloud. In attendance will be: the Chief Information Officer (CIO) the head of the Infrastructure Technology (IT) technical architects from the IT organization technical architects from various Lines of Business (LoBs) that are interested in moving their applications to \"the cloud\" We only have 30 minutes on a very tight agenda and have been instructed to leave time for questions at the end. We will be following a brief presentation a colleague is doing on the benefits of IBM Cloud Satellite using the IBM Cloud Satellite Client Deck. The slot on our agenda is titled \"IBM Cloud Satellite: Live Demonstration\". The goals for the demonstration are: Show how easy it is to deploy IBM Cloud Satellite to a public cloud provider Show how easy it is to deploy an IBM Cloud Satellite enabled services Show how IBM Cloud Satellite can be used to deploy and manage a cloud native application to remote data centers Given the limited amount of time we are allotted, we have decided to leverage an existing environment that already has a Satellite Location deployed with Red Hat OpenShift on IBM Cloud. We will use a \"baking show\" approach in our demonstration and focus the majority of our time on the ease of application deployment and management using IBM Cloud Satellite config.","title":"The Big Event"},{"location":"prepping-for-a-demo/03.01%20Setting%20up%20for%20the%20virtual%20demo/","text":"Quote Before anything else, preparation is the key to success. Alexander Graham Bell Don't wait to the last minute. Make sure the IBM TechZone environment you need is up and running the day before the event and will be available for at least one additional day in case someone wants a follow-up. Setup all the tools you will need before hand. Given this event will be virtual, make sure everything works with the e-meeting technology you will be using (i.e. WebEx, Zoom, etc). Quote Practice makes perfect. Benjamin Franklin Make sure you practice the demonstration flow. There is nothing more embarrassing than a demonstration that fails. Know the steps you are going to take. Know what you will say. Plan on handling errors that may occur. If you are using the \"baking show\" approach, make sure you practice what you will say in the transition from canceling out of doing an actual creation of a resource to moving to a fully provisioned instance of the resource. And most importantly, practice, practice, practice . Before completing this activity and watching the final video of the IBM Cloud Satellite L3 Seller learning plan, watch this informal, unscripted video on how the presenter set up for the client event. Note: If the video appears blurry, click the fullscreen or icon. Here is the high level flow used the video above: DEMO FLOW - Show architecture we are building - Provision a location - Talk about public cloud providers we support including Satellite Infrastructure Service - Talk about on-prem deployments - Show \u201con-premises&edge\u201d order page - Show the provisioned location - Show all the hosts - Provision a Sat-enabled service - Sort on satellite enabled - Talk about the services - Mention Cloud Paks (NDA) - Show OpenShift order page - Show deployed cluster - Show web consoles (already open) by moving this portal to left half screen - Deploy/Manage cloud native application - Show application architecture - Show dev/prod architecture - Show config architecture - Go to Sat Config screen - Show existing versions - Move portal to left half screen - Create Subscriptions - point out what is happening in the OpenShift consoles - kafka-mongo-redis-on-all-clusters - backend-on-all-clusters - frontend-on-dev-clusters - frontend-on-prod-clusters - route-dev - route-prod - Show the update/rollback scenario - Wrap up - any questions","title":"Demonstration setup"},{"location":"prepping-for-a-demo/04.01%20Next%20steps/","text":"Congratulations, you have now completed this activity! Important Be sure to return to the Your Learning plan for IBM Cloud Satellite and mark this task as complete here THIS LINK NEEDS TO BE UPDATED WHEN L3 PLAN EXISTS . We would also greatly appreciate feedback on this demonstration. Please rate and leave comments in Your Learning. Finally, don't forget that you can always return to the IBM Technology Zone collection used in this activity to perform demonstrations for your clients. Be sure to select Customer Demo in the purpose field and provide the client opportunity number if asked.","title":"Next steps"}]}